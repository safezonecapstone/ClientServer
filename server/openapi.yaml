openapi: 3.0.0
info:
  description: SafeZone API
  version: 1.0.0
  title: SafeZone API

servers:
  - url: /api

paths:
  /crimes/nearby:
    get:
      parameters:
        - name: latitude
          in: query
          required: true
          description: Latitude of a Coordinate
          schema:
            type: number
            format: float
        - name: longitude
          in: query
          required: true
          description: Longitude of a Coordinate
          schema:
            type: number
            format: float
        - name: filter
          in: query
          required: false
          description: Crime Categories to filter by
          schema:
            $ref: '#/components/schemas/Filter'
        - name: timeSpan
          in: query
          required: false
          description: Time Span to filter Crime Occurences by
          schema:
            $ref: '#/components/schemas/Time Range'

      operationId: server.controllers.crimes.nearby_crimes_by_point
      tags:
        - Crimes
      summary: List crime occurrences within 500ft of a coordinate
      description: | 
        # Provide list of Crime Occurrences
      responses: 
        200:
          description: A JSON consisting of an array of crime occurrences and the frequencies of each category
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items: 
                      $ref: '#/components/schemas/Crime'
                  frequencies: 
                    $ref: '#/components/schemas/Frequencies'

        401:
          $ref: '#/components/responses/UnauthorizedError'

  /stations/nearby_crimes:
    get:
      parameters:
        - name: id
          in: query
          required: true
          description: 'Station id'
          schema:
            type: number
            format: integer
        - name: timeSpan
          in: query
          required: false
          description: Time Span to filter Crime Occurences by
          schema:
            $ref: '#/components/schemas/Time Range'
      operationId: server.controllers.stations.nearby_crimes_for_stations
      tags:
        - Stations
      summary: List crime occurrences nearby subway stations
      description: |
        # Provide list of Crime Occurrences
      responses: 
        200:
          description: A JSON consisting of an array of crime occurrences and the frequencies of each category
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items: 
                      $ref: '#/components/schemas/Crime'
                  frequencies: 
                    $ref: '#/components/schemas/Frequencies'

        401:
          $ref: '#/components/responses/UnauthorizedError'
        
            
  /stations/nearby:
    get:
      parameters:
        - name: latitude
          in: query
          required: true
          description: Latitude of a Coordinate
          schema:
            type: number
            format: float
        - name: longitude
          in: query
          required: true
          description: Longitude of a Coordinate
          schema:
            type: number
            format: float
      operationId: server.controllers.stations.nearby_stations_all
      tags: 
        - Stations
      summary: List Subway Stations that are within 1/2 mile of a coordinate or the five nearest stations
      description: | 
        ## Provide list of nearby subway stations and its percentile
      responses:
        200:
          description: A JSON array of Subway Stations
          content: 
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Station'
                  
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /stations:
    get:
      parameters:
        - name: name
          in: query
          required: true
          description: Name of station
          schema:
            type: string
        - name: line
          in: query
          required: false
          description: Line of the train that runs in the station
          schema:
            type: string
      operationId: server.controllers.stations.get_station_by_name
      tags:
        - Stations
      summary: Gives subway stations that match the given name and line
      description: |
        ## List of stations
      responses:
        200:
          description: A JSON array consisting of Subway Stations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Station'
                
        401: 
          $ref: '#/components/responses/UnauthorizedError'

  /route:
    get:
      parameters:
        - name: origin_latitude
          in: query
          required: true
          description: Latitude of origin coordinate
          schema:
            type: number
            format: float
        - name: origin_longitude
          in: query
          required: true
          description: Longitude of origin coordinate
          schema:
            type: number
            format: float
        - name: dest_latitude
          in: query
          required: true
          description: Latitude of destination coordinate
          schema:
            type: number
            format: float
        - name: dest_longitude
          in: query
          required: true
          description: Longitude of destination coordinate
          schema:
            type: number
            format: float
      operationId: server.controllers.routes.route
      tags:
        - Routes
      summary: Gives directions with safety ratings from a given origin coordinate to a destination coordinate
      description: |
        ## Steps
      responses:
        200:
          description: A JSON consisting of routes from the origin point to the destination point
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                  ratings:
                    type: array
                    items:
                      type: number
                      format: float
                  
        401: 
          $ref: '#/components/responses/UnauthorizedError'

security:
  - API_KEY_AUTH: []

components:
  securitySchemes:
    API_KEY_AUTH:
      type: apiKey
      description: API KEY in order to access endpoints
      in: query
      name: API_KEY
      x-apikeyInfoFunc: 'server.auth.authenticated'
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
  schemas:
    Filter:
      type: array
      items:
        type: number
        minimum: 1
        maximum: 12
      uniqueItems: true
      minItems: 1
      maxItems: 12
    Time Range:
      type: string
      enum:
        - "week"
        - "month"
        - "3 month"
        - "6 month"
        - "9 month"
        - "year"
    Crime:
      type: object
      properties:
        category:
          type: string
        date:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        ofns_desc:
          type: string
        pd_desc:
          type: string
    Station:
      type: object
      properties:
        id:
          type: number
          format: integer
        name:
          type: string
        lines:
          type: array
          items:
            type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        percentile:
          type: number
          format: float
    Frequencies:
      type: object
      properties:
        Murder:
          type: number
        Rape:
          type: number
        Robbery:
          type: number
        Felony Assault:
          type: number
        Burglary:
          type: number
        Grand Larceny:
          type: number
        Petit Larceny:
          type: number
        Misdemeanor Assault:
          type: number
        Misdemeanor Sex Crimes:
          type: number
        Kidnapping:
          type: number
        Offenses against Public Order:
          type: number
        Shootings:
          type: number

